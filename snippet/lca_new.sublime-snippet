<snippet>
	<content><![CDATA[

struct Lca
{
    vll lvl;
    vvll lca;
    ll maxN,n;

    void dfs(vvll &adj,ll u,ll p)
    {
        lca[u][0]=p;
        if(p==-1)
            lvl[u]=0;
        else 
            lvl[u]=1+lvl[p];

        for(auto nxt: adj[u])
        {
            if(nxt!=p)
                dfs(adj,nxt,u);
        }
    }
    void init(vvll &adj)
    {
        ll i,j,k;
        
        n=adj.size();
        maxN= log2(n) + 1;
        lvl=vll(n);
        lca=vvll(n,vll(maxN,-1));

        dfs(adj,0,-1);

        for(ll i=1;i<maxN;i++)
        {
            for(ll j=0;j<n;j++)
            {
                ll par=lca[j][i-1];
                if(par!=-1)
                    lca[j][i]=lca[par][i-1];
            }
        }
    }

    ll find(ll u,ll v)
    {
        if(lvl[u]<lvl[v])
            swap(u,v);

        ll d=lvl[u]-lvl[v];

        while(d>0)
        {
            ll step=log2(d);
            u=lca[u][step];
            d-=(1ll<<step);
        }

        if(u==v)
            return u;
        for(ll i=maxN -1;i>=0;i--)
        {
            if( lca[u][i]!=-1 && ( lca[u][i] !=lca[v][i]))
            {
                u=lca[u][i];
                v=lca[v][i];
            }
        }
        return lca[u][0];
    }
};
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	 <tabTrigger>LCA_new</tabTrigger> 
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
